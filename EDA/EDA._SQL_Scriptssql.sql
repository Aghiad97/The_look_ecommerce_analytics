/*
order_items, Users, And Products Tables Data Exploration:
1.Expore Schema.
2.Explore Dimensions.
3.Explore Date Dimesnion.
4.Explore Measures.
5.Summary of Key Metrics.
6.Useres and products analysis.
7.Ranking and Performance analysis.
*/

-------------------------
-- Explore Schema
-------------------------
SELECT 
  table_catalog,
  table_schema,
  table_name,
  table_type,
  creation_time
 FROM bigquery-public-data.thelook_ecommerce.INFORMATION_SCHEMA.TABLES;

-------------------------
--Explore Dimensions:
-------------------------
--List Unique Customers Countries:
SELECT DISTINCT
  country
FROM bigquery-public-data.thelook_ecommerce.users;

--List Unique Traffic Sources:
SELECT DISTINCT 
  traffic_source
FROM bigquery-public-data.thelook_ecommerce.users;

--List Products categories:
SELECT DISTINCT 
  category
FROM bigquery-public-data.thelook_ecommerce.products;

--List Unique Brands:
SELECT DISTINCT 
  brand
FROM bigquery-public-data.thelook_ecommerce.products;

--List Unique Status:
SELECT DISTINCT 
  Status 
FROM bigquery-public-data.thelook_ecommerce.order_items;

--------------------------
--Explore Date Dimensions:
--------------------------

-- Identify Sales Rate Range:
SELECT 
  MIN(created_at) AS first_order,
  MAX(created_at) AS last_order
FROM bigquery-public-data.thelook_ecommerce.order_items;

-- Calculate number of years covered in sales data:
SELECT 
  DATE_DIFF(CAST(MAX(created_at) AS DATE), CAST(MIN(created_at)AS DATE), YEAR) AS order_range
FROM bigquery-public-data.thelook_ecommerce.order_items;

-- Calculate the age Range of the customers:
SELECT 
  MAX(age) AS oldest_User,
  MIN(age) AS yongest_user
FROM bigquery-public-data.thelook_ecommerce.users;

--------------------------
--Explore Measures:
--------------------------

--List Of key Metrics:
SELECT 'Total_sales' AS Metric, ROUND(SUM(sale_price),2) AS Value 
FROM `bigquery-public-data.thelook_ecommerce.order_items`

UNION ALL

SELECT 'Avg_price' AS Metric, ROUND(AVG(retail_price),2) AS Value 
FROM `bigquery-public-data.thelook_ecommerce.products`

UNION ALL

SELECT 'Total_orders' AS Metric, COUNT(DISTINCT order_id) AS Value 
FROM `bigquery-public-data.thelook_ecommerce.order_items`

UNION ALL

SELECT 'Total_products' AS Metric, COUNT(DISTINCT name) AS Value 
FROM `bigquery-public-data.thelook_ecommerce.products`

UNION ALL

SELECT 'Total_Users' AS Metric, COUNT(DISTINCT id) AS Value 
FROM `bigquery-public-data.thelook_ecommerce.users`;

-------------------------------------------------
-- Magnitude: compare measure values by category.
-------------------------------------------------

-- Total Number Of Customers By Country
SELECT 
  country,
  COUNT(DISTINCT id) AS total_customers,
FROM `bigquery-public-data.thelook_ecommerce.users`
GROUP BY 1;

-- Total Number Of Cutsomers By gender:
SELECT 
  gender,
  COUNT(DISTINCT id) AS total_customers
FROM `bigquery-public-data.thelook_ecommerce.users`
GROUP BY 1;

-- Total Products By Category:
SELECT 
  category,
  COUNT(DISTINCT id) AS total_products
FROM `bigquery-public-data.thelook_ecommerce.products`
GROUP BY 1;

-- Average cost Per Category
SELECT 
  category,
  ROUND(AVG(cost),2) AS avg_cost
FROM `bigquery-public-data.thelook_ecommerce.products`
GROUP BY 1;

-- Total Revenue Generated by each category:
SELECT 
  category,
  ROUND(SUM(sale_price),2) AS total_revenue,
FROM `bigquery-public-data.thelook_ecommerce.order_items` oi
LEFT JOIN `bigquery-public-data.thelook_ecommerce.products` p ON oi.product_id = p.id
GROUP BY 1
ORDER BY 2 DESC;

-- Total Revenue by Each Customer (From High to Low):
SELECT
  u.id,
  u.first_name,
  u.last_name,
  ROUND(SUM(oi.sale_price),2) AS total_sales
FROM `bigquery-public-data.thelook_ecommerce.order_items`Oi
LEFT JOIN `bigquery-public-data.thelook_ecommerce.users` u ON oi.user_id = u.id
GROUP BY 1, 2, 3
ORDER BY 4 DESC;

-- Distrubution of Sold Items Across Countries;
SELECT 
  u.country,
  COUNT(p.id) AS total_sold_products
FROM `bigquery-public-data.thelook_ecommerce.order_items` oi
LEFT JOIN `bigquery-public-data.thelook_ecommerce.products` p ON oi.product_id = p.id
LEFT JOIN `bigquery-public-data.thelook_ecommerce.users` u ON oi.user_id = u.id
WHERE oi.status = 'Complete'
GROUP BY 1
ORDER BY 1 DESC;

-------------------------------------------------
-- Ranking Analysis:
-------------------------------------------------

-- Top 5 Products generates the highest sales
SELECT 
  name,
  ROUND(SUM(sale_price),2) AS total_sales
FROM `bigquery-public-data.thelook_ecommerce.order_items` oi
JOIN `bigquery-public-data.thelook_ecommerce.products` p ON oi.product_id = p.id
WHERE status = 'Complete'
GROUP BY 1
ORDER BY 2 DESC
LIMIT 5;

-- Worst 5 Products generates the Lowest sales
SELECT 
  p.name,
  ROUND(SUM(oi.sale_price),2) AS total_sales
FROM `bigquery-public-data.thelook_ecommerce.order_items` oi
JOIN `bigquery-public-data.thelook_ecommerce.products` p ON oi.product_id = p.id
WHERE status = 'Complete'
GROUP BY 1
ORDER BY 2 ASC
LIMIT 5;

-- Top 5 Categories generates the highest sales:
SELECT
  p.category,
  ROUND(SUM(oi.sale_price),2) AS total_sales
FROM `bigquery-public-data.thelook_ecommerce.order_items` oi
JOIN `bigquery-public-data.thelook_ecommerce.products` p ON oi.product_id = p.id
WHERE status = 'Complete'
GROUP BY 1
ORDER BY 2 DESC
LIMIT 5;

-- WORST 5 Categories generates the Lowest sales:
SELECT
  p.category,
  ROUND(SUM(oi.sale_price),2) AS total_sales
FROM `bigquery-public-data.thelook_ecommerce.order_items` oi
JOIN `bigquery-public-data.thelook_ecommerce.products` p ON oi.product_id = p.id
WHERE status = 'Complete'
GROUP BY 1
ORDER BY 2 ASC
LIMIT 5;



